apiVersion: v1
kind: Namespace
metadata:
  name: cert-manager
  labels:
    cert-manager.io/disable-validation: "true"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "create", "update"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "update", "patch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cert-manager-view-kube-system
subjects:
  - kind: ServiceAccount
    name: cert-manager
    namespace: cert-manager
roleRef:
  kind: ClusterRole
  name: view
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager
  namespace: cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cert-manager
  template:
    metadata:
      labels:
        app: cert-manager
    spec:
      serviceAccountName: cert-manager
      containers:
        - name: cert-manager
          image: quay.io/jetstack/cert-manager-controller:v1.0.3
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: iliaosipov.134@gmail.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
      - http01:
          ingress:
            class: nginx
---
apiVersion: v1
kind: Service
metadata:
  name: multi-container-app-service
spec:
  selector:
    app: multi-container-app
  ports:
    - protocol: TCP
      port: 443
      targetPort: 80
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: multi-container-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: multi-container-app
  template:
    metadata:
      labels:
        app: multi-container-app
    spec:
      containers:
        - name: backend
          image: gcr.io/steel-sonar-413417/backend:latest
          ports:
            - containerPort: 80
          env:
            - name: DATABASE_URL
              value: "pgsql://postgres:20050404iliA@0.0.0.0/monuments"
            - name: REDIS_HOST
              value: "redis"
        - name: postgres
          image: gcr.io/steel-sonar-413417/postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: monuments
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: 20050404iliA
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
        - name: redis
          image: gcr.io/steel-sonar-413417/redis:latest
          ports:
            - containerPort: 6379
      volumes:
        - name: postgres-data
          emptyDir: {}
